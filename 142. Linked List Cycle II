# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def detectCycle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        fast=head
        show=head
        while fast and fast.next:
            fast=fast.next.next
            show=show.next
            if fast==show:
                break
        else:
            return None
        show=head
        while fast!=show:
            fast=fast.next
            show=show.next
        return fast
        
